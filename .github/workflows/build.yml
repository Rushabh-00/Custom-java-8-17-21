name: Build Custom Server JREs from Local Patches

on:
  workflow_dispatch: # Allows you to run this manually from the Actions tab

permissions:
  contents: write # Required to create/update the GitHub Release

jobs:
  build:
    strategy:
      matrix:
        version: [8, 17, 21]
        arch: ["aarch32", "aarch64"]
      fail-fast: false

    name: "Build Java ${{ matrix.version }} for Android ${{matrix.arch}}"
    runs-on: ubuntu-22-04

    steps:
      - name: Checkout Your Repository (with patches)
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Set up Boot JDK (Java 17)
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install autoconf build-essential git python3 python-is-python3 unzip zip systemtap-sdt-dev gcc-multilib g++-multilib libxtst-dev libasound2-dev libelf-dev libfontconfig1-dev libx11-dev libxext-dev libxrandr-dev libxrender-dev libxt-dev

      - name: Download and Set up Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip -q android-ndk-r25c-linux.zip
          echo "NDK_PATH=$GITHUB_WORKSPACE/android-ndk-r25c" >> $GITHUB_ENV

      - name: Build the Patched JRE
        run: |
          export TARGET_VERSION=${{ matrix.version }}
          # Run our own local build script
          bash "build_${{ matrix.arch }}.sh"
        env:
          # Pass the NDK path to the build script
          NDK_PATH: ${{ env.NDK_PATH }}

      - name: Upload JRE artifact
        uses: actions/upload-artifact@v4
        with:
          name: "jre-${{ matrix.version }}-${{ matrix.arch }}"
          path: jre*.tar.xz

  release:
    needs: build
    runs-on: ubuntu-22-04
    steps:
      - name: Download all JRE artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Rename and prepare artifacts
        run: |
          mkdir release-assets
          # Java 8
          find artifacts/jre-8-aarch32 -name "*.tar.xz" -exec mv {} release-assets/8-arm32.tar.xz \;
          find artifacts/jre-8-aarch64 -name "*.tar.xz" -exec mv {} release-assets/8-arm64.tar.xz \;
          # Java 17
          find artifacts/jre-17-aarch32 -name "*.tar.xz" -exec mv {} release-assets/17-arm32.tar.xz \;
          find artifacts/jre-17-aarch64 -name "*.tar.xz" -exec mv {} release-assets/17-arm64.tar.xz \;
          # Java 21
          find artifacts/jre-21-aarch32 -name "*.tar.xz" -exec mv {} release-assets/21-arm32.tar.xz \;
          find artifacts/jre-21-aarch64 -name "*.tar.xz" -exec mv {} release-assets/21-arm64.tar.xz \;
          echo "Prepared release assets:"
          ls -l release-assets

      - name: Upload to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repository: ${{ github.repository }} # Upload to YOUR repository
          tag: custom-server-jres
          release_name: "Custom Server JREs"
          body: "JREs 8, 17, and 21 for arm32 and arm64, built with local patches for headless server use on Android."
          overwrite: true
          file: release-assets/*.tar.xz
          file_glob: true
